#!/usr/bin/env bash

__roboauto_completion() {
    ___roboauto_get_coordinators() {
        roboauto list-configs | jq -r '.federation | keys[] as $k | "--\($k)"'
    }
    ___roboauto_get_robots() {
        find "$@" -mindepth 1 -maxdepth 1 -type d |
        rev |
        cut -d "/" -f 1 |
        rev
    }

    # shellcheck disable=SC2034
    local cur prev words=() cword

    _get_comp_words_by_ref -n = cur prev words cword

    OPTS=""

    if [ "${cword}" -eq 1 ]; then
        OPTS="
-h
--help
--verbose-help
-v
--version
$(
    roboauto -h |
    grep '^[^[:space:]]' |
    tail -n +2 |
    cut -d " " -f 1 |
    tr '|' '\n' |
    uniq
)"
    else
        local action="${words[1]}"

        local roboauto_home="${XDG_DATA_HOME:-${XDG_LOCAL_HOME:-$HOME/.local}/share}/roboauto"
        local active_home="$roboauto_home/active"
        local pending_home="$roboauto_home/pending"
        local inactive_home="$roboauto_home/inactive"
        local paused_home="$roboauto_home/paused"

        if
            [ ! -d "$active_home" ] ||
            [ ! -d "$pending_home" ] ||
            [ ! -d "$inactive_home" ] ||
            [ ! -d "$paused_home" ]
        then
            return 0
        fi

        set -- "$active_home" "$pending_home" "$inactive_home" "$paused_home"

        case "$action" in
        import-robot)
            if [ "${cword}" -eq 2 ]; then
                OPTS="$(___roboauto_get_coordinators)"
            elif [ "${cword}" -eq 3 ]; then
                OPTS="
--inactive
--paused
"
            fi
        ;;
        print-token|print-coordinator)
            if [ "${cword}" -eq 2 ]; then
                OPTS="$(___roboauto_get_robots "$@")"
            fi
        ;;
        list-active|list-pending|list-inactive|list-paused)
            if [ "${cword}" -eq 2 ]; then
                OPTS="--coordinator"
            fi
        ;;
        set-active)
            if [ "${cword}" -eq 2 ]; then
                OPTS="$(
                    ___roboauto_get_robots \
                        "$pending_home" "$inactive_home" "$paused_home"
                )"
            fi
        ;;
        set-pending|set-inactive|set-paused)
            if [ "${cword}" -eq 2 ]; then
                OPTS="
--all
$(___roboauto_get_robots "$active_home")"
            fi
        ;;
        order-info-local)
            if [ "${cword}" -eq 2 ]; then
                OPTS="
--full"
            fi
            if [ "${cword}" -eq 2 ] || { [ "${cword}" -eq 3 ] && [ "$prev" = "--full" ]; }; then
                OPTS="$OPTS
--active
--inactive
--paused
--dir
$(___roboauto_get_robots "$@")"
            fi

        ;;
        robosats-info|list-limits)
            if [ "${cword}" -eq 2 ]; then
                OPTS="$(___roboauto_get_coordinators)"
            fi
        ;;
        robot-info)
            if [ "${cword}" -eq 2 ]; then
                OPTS="--no-order"
            fi
            if [ "${cword}" -eq 2 ] || [ "${cword}" -eq 3 ]; then
                OPTS="$OPTS
--stdin
--stdin-base91
$(___roboauto_get_robots "$active_home" "$pending_home")"
            fi
            if [ "${cword}" -eq 3 ] || [ "${cword}" -eq 4 ]; then
                if [ "$prev" = "--stdin" ] || [ "$prev" = "--stdin-base91" ]; then
                    OPTS="$(___roboauto_get_coordinators)"
                fi
            fi
        ;;
        robot-chat)
            if [ "${cword}" -eq 2 ]; then
                OPTS="--local"
            fi
            if [ "${cword}" -eq 2 ] || [ "${cword}" -eq 3 ]; then
                OPTS="$OPTS
$(___roboauto_get_robots "$pending_home")"
            fi
        ;;
        message-send)
            if [ "${cword}" -eq 2 ]; then
                OPTS="$(___roboauto_get_robots "$pending_home")"
            fi
        ;;
        list-hours)
            if [ "${cword}" -eq 2 ]; then
                OPTS="--relative"
            fi
        ;;
        list-offers-all|list-offers-buy|list-offers-sell)
            possible_coordinatos="
--all
$(___roboauto_get_coordinators)"
            if [ "${cword}" -eq 2 ]; then
                OPTS="$possible_coordinatos"
            elif [ "${cword}" -eq 3 ]; then
                OPTS="
all
eur
usd
btc
"
            fi
        ;;
        create-order)
            if [ "${cword}" -eq 2 ]; then
                OPTS="--no-bond"
            fi
            if [ "${cword}" -eq 2 ] || { [ "${cword}" -eq 3 ] && [ "$prev" = "--no-bond" ]; }; then
                OPTS="$OPTS
$(___roboauto_get_robots "$paused_home")"
            fi
        ;;
        cancel-order)
            if [ "${cword}" -eq 2 ]; then
                OPTS="$(___roboauto_get_robots "$active_home")"
            fi
        ;;
        recreate-order)
            if [ "${cword}" -eq 2 ]; then
                OPTS="
--no-cancel
--no-bond
$(___roboauto_get_robots "$active_home")"
            fi
            if [ "${cword}" -eq 3 ]; then
                case "$prev" in
                --no-cancel)
                    OPTS="$(___roboauto_get_robots "$paused_home" "$inactive_home")"
                ;;
                --no-bond)
                    OPTS="$(___roboauto_get_robots "$active_home")"
                ;;
                esac
            fi
        ;;
        esac
    fi

    if [ -n "$OPTS" ]; then
        # shellcheck disable=SC2207
        COMPREPLY=($(
            printf "%s\n" "$OPTS" |
            awk -v IGNORECASE=1 -v p="$cur" 'p==substr($0,0,length(p))'
        ))
    fi
} &&
complete -F __roboauto_completion roboauto
